<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://cxf.apache.org/bindings/soap
	http://cxf.apache.org/schemas/configuration/soap.xsd
	http://cxf.apache.org/jaxws
	http://cxf.apache.org/schemas/jaxws.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:database-config.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath*:configServices/*ApplicationContext.xml"/>
	<import resource="classpath*:configStruts/struts-*.xml"/>
	<import resource="classpath*:configAppContext/appcontext-*.xml"/>


	<!-- 数据源 -->
	<!-- <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"> -->
	<bean id="ds" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${database.driver}"/>
		<property name="url" value="${database.url}"/>
		<property name="username" value="${database.user}"/>
		<property name="password" value="${database.passwd}"/>
		<!--  -->
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="3" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="select 1 from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<property name="filters" value="stat" />
	</bean>
	
	<!-- session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- spring管理实体bean的映射文件 -->
		<property name="mapperLocations" value="classpath*:configMapper/*.xml" />
	</bean>
	
	
	<!-- 事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>
	
	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.RuntimeException" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.RuntimeException" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 说明::
		1. propagation="REQUIRED"代表支持当前事务，如果当前没有事务，就新建一个事务。
		2....
	 -->
	
	<!-- 把事务控制在Service层 --><!-- 配置参与事务的类 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.ssm.demo.*.service.impl.*.*(..))" /> 
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" order="2"/>
	</aop:config>
	<!-- 说明::
		1. 其中第一个*代表返回值，第二*代表service.impl下子包，第三个*代表方法名，“（..）”代表方法参数.
		2. aop:advisor标签就是把上面我们所配置的事务管理两部分属性整合起来作为整个事务管理.
	 -->
	
</beans>